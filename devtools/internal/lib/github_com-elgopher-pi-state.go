// Code generated by 'yaegi extract github.com/elgopher/pi/state'. DO NOT EDIT.

package lib

import (
	"reflect"

	"github.com/elgopher/pi/state"
)

func init() {
	Symbols["github.com/elgopher/pi/state/state"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"All":                     reflect.ValueOf(state.All),
		"Delete":                  reflect.ValueOf(state.Delete),
		"ErrInvalidStateName":     reflect.ValueOf(&state.ErrInvalidStateName).Elem(),
		"ErrNilStateOutput":       reflect.ValueOf(&state.ErrNilStateOutput).Elem(),
		"ErrNotFound":             reflect.ValueOf(&state.ErrNotFound).Elem(),
		"ErrStateMarshalFailed":   reflect.ValueOf(&state.ErrStateMarshalFailed).Elem(),
		"ErrStateUnmarshalFailed": reflect.ValueOf(&state.ErrStateUnmarshalFailed).Elem(),
		"Load":                    reflect.ValueOf(stateLoad),
		"Save":                    reflect.ValueOf(state.Save),
	}
}

func stateLoad(name string, out any) {
	state.Load(name, &out)
}
